CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(NAME Engine)
PROJECT(${NAME})

file(GLOB TOTEM_HEADER ${CMAKE_SOURCE_DIR}/Include/Totem/*.h)
SOURCE_GROUP("Source Files\\Include\\Totem" FILES ${TOTEM_HEADER})

file(GLOB HEADER_FILES *.h)
file(GLOB SOURCE_FILES *.cpp)
SOURCE_GROUP("Source Files\\" FILES ${HEADER_FILES} ${SOURCE_FILES})

#ENGINE CLIENT FILES
file(GLOB HEADER_FILES_CLIENT_AUDIO Client/Audio/*.h)
file(GLOB SOURCE_FILES_CLIENT_AUDIO Client/Audio/*.cpp)
SOURCE_GROUP("Source Files\\Client\\Audio\\" FILES ${HEADER_FILES_CLIENT_AUDIO} ${SOURCE_FILES_CLIENT_AUDIO})

file(GLOB HEADER_FILES_CLIENT_SCENE Client/Scene/*.h)
file(GLOB SOURCE_FILES_CLIENT_SCENE Client/Scene/*.cpp)
SOURCE_GROUP("Source Files\\Client\\Scene\\" FILES ${HEADER_FILES_CLIENT_SCENE} ${SOURCE_FILES_CLIENT_SCENE})

file(GLOB HEADER_FILES_CLIENT_GAMEWORLD Client/GameWorld/*.h)
file(GLOB SOURCE_FILES_CLIENT_GAMEWORLD Client/GameWorld/*.cpp)
SOURCE_GROUP("Source Files\\Client\\GameWorld\\" FILES ${HEADER_FILES_CLIENT_GAMEWORLD} ${SOURCE_FILES_CLIENT_GAMEWORLD})

file(GLOB HEADER_FILES_CLIENT_UI Client/UIFramework/*.h)
file(GLOB SOURCE_FILES_CLIENT_UI Client/UIFramework/*.cpp)
SOURCE_GROUP("Source Files\\Client\\UIFramework\\" FILES ${HEADER_FILES_CLIENT_UI} ${SOURCE_FILES_CLIENT_UI})

#ENGINE COMMON FILES
file(GLOB HEADER_FILES_COMMON_GAMEWORLD Common/GameWorld/*.h)
file(GLOB SOURCE_FILES_COMMON_GAMEWORLD Common/GameWorld/*.cpp)
SOURCE_GROUP("Source Files\\Common\\GameWorld\\" FILES ${HEADER_FILES_COMMON_GAMEWORLD} ${SOURCE_FILES_COMMON_GAMEWORLD})

file(GLOB HEADER_FILES_COMMON_GAMEWORLD_COMPONENTS Common/GameWorld/Components/*.h)
file(GLOB SOURCE_FILES_COMMON_GAMEWORLD_COMPONENTS Common/GameWorld/Components/*.cpp)
SOURCE_GROUP("Source Files\\Common\\GameWorld\\Components\\" FILES ${HEADER_FILES_COMMON_GAMEWORLD_COMPONENTS} ${SOURCE_FILES_COMMON_GAMEWORLD_COMPONENTS})

file(GLOB HEADER_FILES_COMMON_NETWORK Common/Network/*.h)
file(GLOB SOURCE_FILES_COMMON_NETWORK Common/Network/*.cpp)
SOURCE_GROUP("Source Files\\Common\\Network\\" FILES ${HEADER_FILES_COMMON_NETWORK} ${SOURCE_FILES_COMMON_NETWORK})

file(GLOB HEADER_FILES_COMMON_PERF Common/Performance/*.h)
file(GLOB SOURCE_FILES_COMMON_PERF Common/Performance/*.cpp)
SOURCE_GROUP("Source Files\\Common\\Performance\\" FILES ${HEADER_FILES_COMMON_PERF} ${SOURCE_FILES_COMMON_PERF})

#ENGINE SERVER FILES
file(GLOB HEADER_FILES_SERVER_GAMEWORLD Server/GameWorld/*.h)
file(GLOB SOURCE_FILES_SERVER_GAMEWORLD Server/GameWorld/*.cpp)
SOURCE_GROUP("Source Files\\Server\\GameWorld\\" FILES ${HEADER_FILES_SERVER_GAMEWORLD} ${SOURCE_FILES_SERVER_GAMEWORLD})

#file(GLOB HEADER_FILES_SERVER_GAMEWORLD_TCOD Server/GameWorld/LibTCOD/*.h)
#file(GLOB HEADER_FILES_SERVER_GAMEWORLD_TCOD2 Server/GameWorld/LibTCOD/*.hpp)
#file(GLOB SOURCE_FILES_SERVER_GAMEWORLD_TCOD Server/GameWorld/LibTCOD/*.cpp)
#file(GLOB SOURCE_FILES_SERVER_GAMEWORLD_TCOD2 Server/GameWorld/LibTCOD/*.inl)
#SOURCE_GROUP("Source Files\\Server\\GameWorld\\LibTCOD\\" FILES ${HEADER_FILES_SERVER_GAMEWORLD_TCOD} ${SOURCE_FILES_SERVER_GAMEWORLD_TCOD} ${HEADER_FILES_SERVER_GAMEWORLD_TCOD2} ${SOURCE_FILES_SERVER_GAMEWORLD_TCOD2})

FIND_PACKAGE(ClanLib REQUIRED)
file(GLOB CL_HEADER ${CL_DIR}/*.h)
SOURCE_GROUP("Source Files\\Include\\ClanLib" FILES ${CL_HEADER})
 
add_library(${NAME} STATIC 
	${HEADER_FILES} ${SOURCE_FILES} 
	${HEADER_FILES_CLIENT_AUDIO} ${SOURCE_FILES_CLIENT_AUDIO}
	${HEADER_FILES_CLIENT_SCENE} ${SOURCE_FILES_CLIENT_SCENE}
	${HEADER_FILES_CLIENT_GAMEWORLD} ${SOURCE_FILES_CLIENT_GAMEWORLD}
	${HEADER_FILES_CLIENT_UI} ${SOURCE_FILES_CLIENT_UI}
	${HEADER_FILES_COMMON_GAMEWORLD} ${SOURCE_FILES_COMMON_GAMEWORLD}
	${HEADER_FILES_COMMON_GAMEWORLD_COMPONENTS} ${SOURCE_FILES_COMMON_GAMEWORLD_COMPONENTS}
	${HEADER_FILES_COMMON_NETWORK} ${SOURCE_FILES_COMMON_NETWORK}
	${HEADER_FILES_COMMON_PERF} ${SOURCE_FILES_COMMON_PERF}
	${HEADER_FILES_SERVER_GAMEWORLD} ${SOURCE_FILES_SERVER_GAMEWORLD}
	#${HEADER_FILES_SERVER_GAMEWORLD_TCOD} ${SOURCE_FILES_SERVER_GAMEWORLD_TCOD}
	#${HEADER_FILES_SERVER_GAMEWORLD_TCOD2} ${SOURCE_FILES_SERVER_GAMEWORLD_TCOD2}
	${TOTEM_HEADER} 
	${CL_HEADER})

set_target_properties(${NAME} PROPERTIES FOLDER "Sources")

if (MSVC)
   set_target_properties(${NAME} PROPERTIES COMPILE_FLAGS "/Yuprecomp.h")
   set_source_files_properties(precomp.cpp PROPERTIES COMPILE_FLAGS "/Ycprecomp.h")
endif(MSVC)

#FIND_PACKAGE(LibTCOD REQUIRED)
TARGET_LINK_LIBRARIES(${NAME} 
	debug ${CL_CORE_LIBRARY_DEBUG} 	 optimized ${CL_CORE_LIBRARY_RELEASE}
	debug ${CL_DISPLAY_LIBRARY_DEBUG} 	optimized ${CL_DISPLAY_LIBRARY_RELEASE}
	debug ${CL_DB_LIBRARY_DEBUG} 	 optimized ${CL_DB_LIBRARY_RELEASE}
	debug ${CL_NET_LIBRARY_DEBUG} 	 optimized ${CL_NET_LIBRARY_RELEASE}
	debug ${CL_SQ_LIBRARY_DEBUG} 	 optimized ${CL_SQ_LIBRARY_RELEASE}
	debug ${CL_SOUND_LIBRARY_DEBUG} optimized ${CL_SOUND_LIBRARY_RELEASE}
	#${TCOD_LIBRARY} ${TCOD_GUI_LIBRARY}
)

INCLUDE_DIRECTORIES(
	${CMAKE_SOURCE_DIR}/Sources/Engine/
	${CL_INCLUDE}
)
