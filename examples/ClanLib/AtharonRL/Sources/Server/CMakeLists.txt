CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(NAME Server)
PROJECT(${NAME})

file(GLOB TOTEM_HEADER ${CMAKE_SOURCE_DIR}/Include/Totem/*.h)
SOURCE_GROUP("Source Files\\Include\\Totem" FILES ${TOTEM_HEADER})

file(GLOB HEADER_FILES *.h)
file(GLOB SOURCE_FILES *.cpp)
SOURCE_GROUP("Source Files\\" FILES ${HEADER_FILES} ${SOURCE_FILES})

file(GLOB HEADER_FILES_DATABASE Database/*.h)
file(GLOB SOURCE_FILES_DATABASE Database/*.cpp)
SOURCE_GROUP("Source Files\\Database\\" FILES ${HEADER_FILES_DATABASE} ${SOURCE_FILES_DATABASE})

file(GLOB HEADER_FILES_GAMEWORLD GameWorld/*.h)
file(GLOB SOURCE_FILES_GAMEWORLD GameWorld/*.cpp)
SOURCE_GROUP("Source Files\\GameWorld\\" FILES ${HEADER_FILES_GAMEWORLD} ${SOURCE_FILES_GAMEWORLD})

file(GLOB HEADER_FILES_COMPONENTS GameWorld/Components/*.h)
file(GLOB SOURCE_FILES_COMPONENTS GameWorld/Components/*.cpp)
SOURCE_GROUP("Source Files\\GameWorld\\Components\\" FILES ${HEADER_FILES_COMPONENTS} ${SOURCE_FILES_COMPONENTS})

file(GLOB HEADER_FILES_PROCEDURAL GameWorld/Procedural/*.h)
file(GLOB SOURCE_FILES_PROCEDURAL GameWorld/Procedural/*.cpp)
SOURCE_GROUP("Source Files\\GameWorld\\Procedural\\" FILES ${HEADER_FILES_PROCEDURAL} ${SOURCE_FILES_PROCEDURAL})

file(GLOB HEADER_FILES_ZONE GameWorld/Zone/*.h)
file(GLOB SOURCE_FILES_ZONE GameWorld/Zone/*.cpp)
SOURCE_GROUP("Source Files\\GameWorld\\Zone\\" FILES ${HEADER_FILES_ZONE} ${SOURCE_FILES_ZONE})

file(GLOB HEADER_FILES_NETEVENTS GameWorld/Netevents/*.h)
file(GLOB SOURCE_FILES_NETEVENTS GameWorld/Netevents/*.cpp)
SOURCE_GROUP("Source Files\\GameWorld\\Netevents\\" FILES ${HEADER_FILES_NETEVENTS} ${SOURCE_FILES_NETEVENTS})

FIND_PACKAGE(ClanLib REQUIRED)
file(GLOB CL_HEADER ${CL_DIR}/*.h)
SOURCE_GROUP("Source Files\\Include\\ClanLib" FILES ${CL_HEADER})

add_executable(${NAME} 
	${HEADER_FILES} ${SOURCE_FILES} 
	${HEADER_FILES_DATABASE} ${SOURCE_FILES_DATABASE}
	${HEADER_FILES_GAMEWORLD} ${SOURCE_FILES_GAMEWORLD}
	${HEADER_FILES_COMPONENTS} ${SOURCE_FILES_COMPONENTS}
	${HEADER_FILES_PROCEDURAL} ${SOURCE_FILES_PROCEDURAL}
	${HEADER_FILES_ZONE} ${SOURCE_FILES_ZONE}
	${HEADER_FILES_NETEVENTS} ${SOURCE_FILES_NETEVENTS}
	${TOTEM_HEADER} 
	${CL_HEADER})

set_target_properties(${NAME} PROPERTIES FOLDER "Sources")

if (MSVC)
   set_target_properties(${NAME} PROPERTIES COMPILE_FLAGS "/Yuprecomp.h")
   set_source_files_properties(precomp.cpp PROPERTIES COMPILE_FLAGS "/Ycprecomp.h")
endif(MSVC)

#FIND_PACKAGE(LibTCOD REQUIRED)
TARGET_LINK_LIBRARIES(${NAME} 
	debug ${CL_CORE_LIBRARY_DEBUG} 	 optimized ${CL_CORE_LIBRARY_RELEASE}
	debug ${CL_DB_LIBRARY_DEBUG} 	 optimized ${CL_DB_LIBRARY_RELEASE}
	debug ${CL_NET_LIBRARY_DEBUG} 	 optimized ${CL_NET_LIBRARY_RELEASE}
	debug ${CL_SQ_LIBRARY_DEBUG} 	 optimized ${CL_SQ_LIBRARY_RELEASE}
	debug ${CL_DISPLAY_LIBRARY_DEBUG} 	optimized ${CL_DISPLAY_LIBRARY_RELEASE}
	debug ${CL_GUI_LIBRARY_DEBUG} 		optimized ${CL_GUI_LIBRARY_RELEASE}
	debug ${CL_CSS_LIBRARY_DEBUG} 		optimized ${CL_CSS_LIBRARY_RELEASE}
	#${TCOD_LIBRARY} ${TCOD_GUI_LIBRARY}
	Engine
)

INCLUDE_DIRECTORIES(
	${CMAKE_SOURCE_DIR}/Sources/Server/
	${CL_INCLUDE}
)
