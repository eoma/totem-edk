CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(NAME Client)
PROJECT(${NAME})

file(GLOB TOTEM_HEADER ${CMAKE_SOURCE_DIR}/Include/Totem/*.h)
SOURCE_GROUP("Source Files\\Include\\Totem" FILES ${TOTEM_HEADER})

file(GLOB HEADER_FILES *.h)
file(GLOB SOURCE_FILES *.cpp)
SOURCE_GROUP("Source Files\\" FILES ${HEADER_FILES} ${SOURCE_FILES})

file(GLOB HEADER_FILES_GAMESCREEN GameScreen/*.h)
file(GLOB SOURCE_FILES_GAMESCREEN GameScreen/*.cpp)
SOURCE_GROUP("Source Files\\GameScreen\\" FILES ${HEADER_FILES_GAMESCREEN} ${SOURCE_FILES_GAMESCREEN})

file(GLOB HEADER_FILES_GAMEWORLD GameWorld/*.h)
file(GLOB SOURCE_FILES_GAMEWORLD GameWorld/*.cpp)
SOURCE_GROUP("Source Files\\GameWorld\\" FILES ${HEADER_FILES_GAMEWORLD} ${SOURCE_FILES_GAMEWORLD})

file(GLOB HEADER_FILES_GAMEWORLD_COMPONENTS GameWorld/Components/*.h)
file(GLOB SOURCE_FILES_GAMEWORLD_COMPONENTS GameWorld/Components/*.cpp)
SOURCE_GROUP("Source Files\\GameWorld\\Components\\" FILES ${HEADER_FILES_GAMEWORLD_COMPONENTS} ${SOURCE_FILES_GAMEWORLD_COMPONENTS})

file(GLOB HEADER_FILES_LOADINGSCREEN LoadingScreen/*.h)
file(GLOB SOURCE_FILES_LOADINGSCREEN LoadingScreen/*.cpp)
SOURCE_GROUP("Source Files\\LoadingScreen\\" FILES ${HEADER_FILES_LOADINGSCREEN} ${SOURCE_FILES_LOADINGSCREEN})

file(GLOB HEADER_FILES_LOGINSCREEN LoginScreen/*.h)
file(GLOB SOURCE_FILES_LOGINSCREEN LoginScreen/*.cpp)
SOURCE_GROUP("Source Files\\LoginScreen\\" FILES ${HEADER_FILES_LOGINSCREEN} ${SOURCE_FILES_LOGINSCREEN})

file(GLOB HEADER_FILES_CHARSELECT CharacterSelectionScreen/*.h)
file(GLOB SOURCE_FILES_CHARSELECT CharacterSelectionScreen/*.cpp)
SOURCE_GROUP("Source Files\\CharacterSelectionScreen\\" FILES ${HEADER_FILES_CHARSELECT} ${SOURCE_FILES_CHARSELECT})

FIND_PACKAGE(ClanLib REQUIRED)
file(GLOB CL_HEADER ${CL_DIR}/*.h)
SOURCE_GROUP("Source Files\\Include\\ClanLib" FILES ${CL_HEADER})

IF(MSVC)
	SET(IS_WIN32 WIN32)
ENDIF()
add_executable(${NAME} ${IS_WIN32}
	${HEADER_FILES} ${SOURCE_FILES} 
	${HEADER_FILES_GAMESCREEN} ${SOURCE_FILES_GAMESCREEN}
	${HEADER_FILES_GAMEWORLD} ${SOURCE_FILES_GAMEWORLD}
	${HEADER_FILES_GAMEWORLD_COMPONENTS} ${SOURCE_FILES_GAMEWORLD_COMPONENTS}
	${HEADER_FILES_LOADINGSCREEN} ${SOURCE_FILES_LOADINGSCREEN}
	${HEADER_FILES_LOGINSCREEN} ${SOURCE_FILES_LOGINSCREEN}
	${HEADER_FILES_CHARSELECT} ${SOURCE_FILES_CHARSELECT}
	${TOTEM_HEADER} 
	${CL_HEADER})

set_target_properties(${NAME} PROPERTIES FOLDER "Sources")

if (MSVC)
   set_target_properties(${NAME} PROPERTIES COMPILE_FLAGS "/Yuprecomp.h")
   set_source_files_properties(precomp.cpp PROPERTIES COMPILE_FLAGS "/Ycprecomp.h")
endif(MSVC)

#FIND_PACKAGE(LibTCOD REQUIRED)
TARGET_LINK_LIBRARIES(${NAME} 
	debug ${CL_APP_LIBRARY_DEBUG} 	 	optimized ${CL_APP_LIBRARY_RELEASE}
	debug ${CL_CORE_LIBRARY_DEBUG} 	 	optimized ${CL_CORE_LIBRARY_RELEASE}
	debug ${CL_DB_LIBRARY_DEBUG} 	 	optimized ${CL_DB_LIBRARY_RELEASE}
	debug ${CL_DISPLAY_LIBRARY_DEBUG} 	optimized ${CL_DISPLAY_LIBRARY_RELEASE}
	debug ${CL_GL_LIBRARY_DEBUG}	 	optimized ${CL_GL_LIBRARY_RELEASE}
	debug ${CL_NET_LIBRARY_DEBUG} 	 	optimized ${CL_NET_LIBRARY_RELEASE}
	debug ${CL_SQ_LIBRARY_DEBUG} 	 	optimized ${CL_SQ_LIBRARY_RELEASE}
	debug ${CL_SOUND_LIBRARY_DEBUG} 	optimized ${CL_SOUND_LIBRARY_RELEASE}
	debug ${CL_GUI_LIBRARY_DEBUG} 		optimized ${CL_GUI_LIBRARY_RELEASE}
	debug ${CL_CSS_LIBRARY_DEBUG} 		optimized ${CL_CSS_LIBRARY_RELEASE}
	#${TCOD_LIBRARY} ${TCOD_GUI_LIBRARY}
	Engine
)

INCLUDE_DIRECTORIES(
	${CMAKE_SOURCE_DIR}/Sources/Client/
	${CL_INCLUDE}
)
